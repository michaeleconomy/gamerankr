%table.rankings
  %tr
    %th &nbsp;
    - @columns.each do |column|
      - is_current_sort = column == params[:sort]
      - can_sort = RankingsSorting::COLUMNS[column].present?
      %th{class: column.downcase.gsub(/\s/, "")}
        = link_to_if can_sort, column,
          url_for(:sort => column,
            :order => @sort_order || !is_current_sort ? nil : "d")
        - if can_sort && is_current_sort
          - if @sort_order
            = link_to image_tag("up_arrow.gif"), url_for(order: nil)
          - else
            = link_to image_tag("down_arrow.gif"), url_for(order: "d")
  - @rankings.each do |ranking|
    - port = ranking.port
    - game = port.game
    %tr
      %td
        = link_to port_image(port, "SL70"), game_path(game, port_id:port.id), class: 'leftImage'
      %td
        = link_to_ar port
      %td
        - if port.platform
          = link_to(port.platform.short, port.platform)
      %td
        = ranking.created_at.strftime("%-m/%-d/%y")
      %td
        = number_with_precision(game.average_ranking, precision: 2)
      %td
        = game.rankings_count
      %td
        - ranking.ranking_shelves.each do |rs|
          = link_to_ar rs.shelf
      %td.stars
        .rank{port_id: port && port.id, ranking_id: ranking && ranking.id}
          = render 'rankings/stars',
            ranking_num: (ranking && ranking.ranking),
            shelf_id: ranking ? nil : @played_shelf_id
      %td
        = link_to "View", ranking
        = link_to "Edit", edit_ranking_path(ranking)
= will_paginate @rankings