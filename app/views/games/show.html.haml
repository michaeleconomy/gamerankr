- @og_type = "game"
- @og_title = "#{@game.title} (#{@port.platform.name})"
- @canonical_url = game_url(@game)
- @og_image = @port.large_image_url
- @meta_description = @game.description
%div{itemscope: true, itemtype: "https://schema.org/VideoGame"}
  .contentBlockShort
    .left30
      - cover = port_image(@port, "SX250", class: 'cover', itemprop: "image")
      - if @port.has_image?
        = link_to cover, cover_port_path(@port), rel: "nofollow"
      - else
        = cover
    .left70
      - if admin?
        .right.blockingLinks
          = link_to "Edit Port", edit_port_path(@port)
          = link_to "Edit Game", edit_game_path(@game)
          - if @port.additional_data.is_a?(IgdbGame)
            = link_to "Refresh IGDB Data", refresh_igdb_path(id: @port.additional_data.igdb_id), method: :post
      %h1{itemprop: "name"}
        = @port.title
        - @title = "#{@port.title} (#{@port.platform.name}) - rating and reviews"
      .contentBlockShort
        = link_to_ar @port.platform, itemprop: "gamePlatform"
      .left50
        - unless @series.empty?
          .series
            %strong.question
              Series:
            - @series.each do |series|
              = link_to_ar(series)
        - other_ports = @ports - [@port]
        - unless other_ports.empty?
          .platforms
            %strong.question
              Other Platforms:
            - other_ports.each do |port|
              = link_to port.platform.short, game_path(@game, port_id: port.id), rel: 'nofollow'
        - if !@game.genres.empty?
          .genres
            %strong.question
              = @game.genres.size == 1 ? "Genre:" : "Genres:"
            - @game.genres.each do |genre|
              = link_to_ar(genre)
        - if !@game.franchises.empty?
          .genres
            %strong.question
              = @game.franchises.size == 1 ? "Franchise:" : "Franchises:"
            - @game.franchises.each do |franchise|
              = link_to_ar(franchise)
        - unless @developers.empty?
          .developers
            %strong.question
              = @developers.size == 1 ? "Developer:" : "Developers:"
            - @developers.each do |developer|
              = link_to_ar(developer, itemprop: "author")
        - unless @designers.empty?
          .designers
            %strong.question
              = @designers.size == 1 ? "Designer:" : "Designers:"
            - @designers.each do |designer|
              = link_to_ar(designer, itemprop: "author")
        - unless @publishers.empty?
          .publishers
            %strong.question
              = @publishers.size == 1 ? "Publisher:" : "Publishers:"
            - @publishers.each do |publisher|
              = link_to_ar(publisher, itemprop: "author")
        - count_ranked = @game.count_ranked
        .rankings{itemscope: true, itemtype: count_ranked > 0 ? "https://schema.org/AggregateRating" : nil, itemprop: count_ranked > 0 ? "aggregateRating" : nil}
          - if count_ranked > 0
            %meta{itemprop: "ratingValue", content: "#{@game.sum_rankings}/#{count_ranked * 5}"}
            %meta{itemprop: "ratingCount", content: count_ranked}
          - unless other_ports.empty?
            %strong.question
              All Editions:
          = pluralize(@game.rankings_count, "ranking") + (@game.rankings_count > 0 ? "," : "")
          - if @game.rankings_count > 0
            Avg Rating:
            = number_with_precision(@game.average_ranking, precision: 2)
        - unless other_ports.empty?
          .rankings
            %strong.question
              This Edition: 
            = pluralize(@port.rankings_count, "ranking") + (@port.rankings_count > 0 ? "," : "")
            - if @port.rankings_count > 0
              Avg Rating:
              %span
                = number_with_precision(@port.average_ranking, precision: 2)
        - if @game.initially_released_at
          .initially_released_at
            %strong.question
              - if @game.initially_released_at.to_date <= Date.today
                Published:
              - else
                Expected Publication:
            = release_date(@game.initially_released_at, @game.initially_released_at_accuracy)
      .right50
        - if @port.best_description?
          .description{itemprop: "description"}
            = truncate_with_link @port.best_description
  #myReview.contentBlockNoOverflow
    = render partial: 'rankings/rank_stuff', locals: {port: @port}
    - if @ranking
      = render_ar @ranking, locals: {hide_shelves: true}
      - if @ranking.port_id != @port.id
        .other_edition
          You added a
          = link_to("different edition (#{@ranking.port.platform.name})", @ranking.port)
          = form_for(@ranking) do |f|
            = f.hidden_field :port_id, :value => @port.id
            = f.submit "switch to this edition"
  - if signed_in?
    .contentBlock
      %h2 Rankings of People You Follow
      .friendsRankings
        - if @following_rankings.empty?
          None so far.
        - else
          .rankings
            = pluralize(@following_rankings.size, "Ranking")
            - if (avg = @following_rankings.collect(&:ranking).compact.average) > 0
              \- Average Rating:
              = format_decimal(avg)
          = render partial: 'rankings/ranking_user', collection: @following_rankings
  .contentBlock
    %h2 Everyone's Rankings
    .everyonesRankings
      - if @all_rankings.empty?
        No one has added this game yet.
      - else
        .rankings{itemprop: "reviewCount"}
          = pluralize(@game.rankings_count, "Ranking")
        = render partial: 'rankings/ranking_user', collection: @all_rankings
        = will_paginate @all_rankings_paginator
  - if @port.additional_data
    - if @port.additional_data.is_a?(IgdbGame)
      -if admin?
        .contentBlock
          This game data is from
          = link_to "igdb", "https://www.igdb.com/search?type=1&q=#{CGI.escape(@port.title)}"
    - else
      .contentBlock
        This game data is from
        - if @port.additional_data.is_a?(GiantBombPort)
          = link_to(image_tag("search/giantbomb_logo.png"), @port.additional_data.url, rel: 'nofollow')
        - elsif @port.additional_data.is_a?(ItunesPort)
          = link_to(image_tag("search/itunes_logo.png"), @port.additional_data.affiliate_url, rel: 'nofollow')
        - else
          unknown